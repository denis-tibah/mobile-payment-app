import { ClientJS } from 'clientjs'

/**
example const {...} = browserFingerprint();
*/
export function browserFingerprint() {
  const {
    getBrowserData,
    getFingerprint,
    getCustomFingerprint,
    getUserAgent,
    getUserAgentLowerCase,
    getBrowser,
    getBrowserVersion,
    getBrowserMajorVersion,
    isIE,
    isChrome,
    isFirefox,
    isSafari,
    isOpera,
    getEngine,
    getEngineVersion,
    getOS,
    getOSVersion,
    isWindows,
    isMac,
    isLinux,
    isUbuntu,
    isSolaris,
    getDevice,
    getDeviceType,
    getDeviceVendor,
    getCPU,
    isMobile,
    isMobileMajor,
    isMobileAndroid,
    isMobileOpera,
    isMobileWindows,
    isMobileBlackBerry,
    isMobileIOS,
    isIphone,
    isIpad,
    isIpod,
    getScreenPrint,
    getColorDepth,
    getCurrentResolution,
    getAvailableResolution,
    getDeviceXDPI,
    getDeviceYDPI,
    getPlugins,
    isJava,
    // getJavaVersion, // functional only in java and full builds, throws an error otherwise
    isFlash,
    // getFlashVersion, // functional only in flash and full builds, throws an error otherwise
    isSilverlight,
    getSilverlightVersion,
    getMimeTypes,
    isMimeTypes,
    isFont,
    getFonts,
    isLocalStorage,
    isSessionStorage,
    isCookie,
    getTimeZone,
    getLanguage,
    getSystemLanguage,
    isCanvas,
    getCanvasPrint,
  }:any = new ClientJS();


  return {
    getBrowserData,
    getFingerprint,
    getCustomFingerprint,
    getUserAgent,
    getUserAgentLowerCase,
    getBrowser,
    getBrowserVersion,
    getBrowserMajorVersion,
    isIE,
    isChrome,
    isFirefox,
    isSafari,
    isOpera,
    getEngine,
    getEngineVersion,
    getOS,
    getOSVersion,
    isWindows,
    isMac,
    isLinux,
    isUbuntu,
    isSolaris,
    getDevice,
    getDeviceType,
    getDeviceVendor,
    getCPU,
    isMobile,
    isMobileMajor,
    isMobileAndroid,
    isMobileOpera,
    isMobileWindows,
    isMobileBlackBerry,
    isMobileIOS,
    isIphone,
    isIpad,
    isIpod,
    getScreenPrint,
    getColorDepth,
    getCurrentResolution,
    getAvailableResolution,
    getDeviceXDPI,
    getDeviceYDPI,
    getPlugins,
    isJava,
    // getJavaVersion, // functional only in java and full builds, throws an error otherwise
    isFlash,
    // getFlashVersion, // functional only in flash and full builds, throws an error otherwise
    isSilverlight,
    getSilverlightVersion,
    getMimeTypes,
    isMimeTypes,
    isFont,
    getFonts,
    isLocalStorage,
    isSessionStorage,
    isCookie,
    getTimeZone,
    getLanguage,
    getSystemLanguage,
    isCanvas,
    getCanvasPrint,
  }




}
